/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TicketBooking as PrismaTicketBooking } from "@prisma/client";

export class TicketBookingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TicketBookingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.ticketBooking.count(args);
  }

  async ticketBookings(
    args: Prisma.TicketBookingFindManyArgs
  ): Promise<PrismaTicketBooking[]> {
    return this.prisma.ticketBooking.findMany(args);
  }
  async ticketBooking(
    args: Prisma.TicketBookingFindUniqueArgs
  ): Promise<PrismaTicketBooking | null> {
    return this.prisma.ticketBooking.findUnique(args);
  }
  async createTicketBooking(
    args: Prisma.TicketBookingCreateArgs
  ): Promise<PrismaTicketBooking> {
    return this.prisma.ticketBooking.create(args);
  }
  async updateTicketBooking(
    args: Prisma.TicketBookingUpdateArgs
  ): Promise<PrismaTicketBooking> {
    return this.prisma.ticketBooking.update(args);
  }
  async deleteTicketBooking(
    args: Prisma.TicketBookingDeleteArgs
  ): Promise<PrismaTicketBooking> {
    return this.prisma.ticketBooking.delete(args);
  }
}
